{"version":3,"sources":["helpers/getResponseArray.ts","helpers/parseFetchedPokemon.ts","store/pokeContext.ts","store/PokeProvider.tsx","styles/GlobalStyles.ts","assets/images/pokedexIcon.svg","assets/images/searchIcon.svg","components/Container/index.ts","components/Header/index.ts","components/PokeTypeBadge/index.ts","components/Card/index.ts","components/AllPokemons/styles.ts","components/AllPokemons/index.tsx","pages/Home/index.tsx","assets/images/arrowIcon.svg","components/PokeDetails/Info/styles.ts","components/PokeDetails/Info/index.tsx","components/PokeDetails/Stats/styles.ts","components/PokeDetails/Stats/index.tsx","components/PokeDetails/Abilities/styles.ts","components/PokeDetails/Abilities/index.tsx","components/PokeDetails/Evolution/styles.ts","components/PokeDetails/Evolution/index.tsx","components/PokeDetails/Type/styles.ts","components/PokeDetails/Type/index.tsx","pages/Details/styles.ts","pages/Details/index.tsx","App.tsx","index.tsx"],"names":["idGenerator","ranges","start","end","hasNext","id","genId","getResponseArray","page","perPage","fetchArray","i","next","done","Promise","all","push","fetch","value","parseFetchedPokemon","pokemon","name","abilities","map","ability","types","type","height","weight","base_experience","stats","stat","base_stat","effort","initialState","pokemons","nextPage","isLoading","error","pokeContext","createContext","PokeProvider","children","useState","setIsLoading","setPage","setPokemons","setError","useEffect","a","responses","fetchedPokemons","response","json","pokeRes","fetchPokemons","then","prev","catch","err","message","Provider","createGlobalStyle","Container","styled","div","Header","header","PokeTypeBadge","span","Card","article","Wrapper","PokeCard","AllPokemons","useContext","nextPageRef","useRef","qtdPokemons","length","intersectionObserver","IntersectionObserver","entries","some","entry","isIntersecting","current","observe","document","querySelector","disconnect","to","src","alt","replace","str","toUpperCase","className","substr","Home","inputRef","history","useHistory","pokedexIcon","onSubmit","evt","preventDefault","placeholder","aria-label","ref","searchIcon","InfoWrapper","Info","props","color","capture_rate","base_happiness","StatsWrapper","section","StatBar","width","Stats","AbilitiesWrapper","Abilities","abilitiesNames","setAbilities","fetchedAbilities","responseArray","effect_entries","find","effectObj","language","effect","info","getAbilities","as","EvolutionWrapper","parseEvolutions","evolves_to","parsedEvolutions","evolves","concat","species","initial","url","split","min_level","evolution_details","min_happiness","Evolution","evolutions","setEvolutions","chain","getEvolutions","fetchedEvolutions","evolution","onClick","window","scrollTo","TypeWrapper","Type","typesNames","setTypes","fetchedTypes","damage_relations","parsedDamageRelations","Object","key","reduce","acc","val","fetchedType","getTypes","double_damage_from","item","toLowerCase","double_damage_to","half_damage_from","half_damage_to","no_damage_from","no_damage_to","MainDetails","Details","poke_id","useParams","setPokemon","pokemonInCtx","pkm","toString","getSpecieDetails","specieDetails","evolution_chain","res","ok","Error","status","fetchedInfo","details","arrowIcon","style","margin","App","path","exact","component","GlobalStyles","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.b65ba2ed.chunk.js","sourcesContent":["// range de pokemons na api\nconst ranges = [\n  { start: 1, end: 898 },\n  { start: 10001, end: 10220 }\n]\n\nfunction* idGenerator() {\n  let hasNext = true\n  let id = 1\n  while (hasNext) {\n    id =\n      id <= ranges[0].end || id >= ranges[1].start\n        ? id\n        : id - ranges[0].end - 1 + ranges[1].start\n    yield id\n    id++\n    hasNext = id <= ranges[1].end\n  }\n}\n\nconst genId = idGenerator()\n\nfunction getResponseArray(page: number, perPage: number): Promise<Response[]> {\n  let fetchArray: Promise<Response>[] = []\n  for (let i = 0; i < page * perPage; i++) {\n    const id = genId.next()\n    if (id.done) return Promise.all(fetchArray)\n    fetchArray.push(fetch(`https://pokeapi.co/api/v2/pokemon/${id.value}`))\n  }\n  return Promise.all(fetchArray)\n}\n\nexport default getResponseArray\n","import { PokeHomeInfo } from '../store/pokeContext'\n\nfunction parseFetchedPokemon(pokemon: Record<string, any>): PokeHomeInfo {\n  return {\n    id: pokemon.id,\n    name: pokemon.name,\n    abilities: pokemon.abilities.map(\n      ({ ability }: Record<string, any>) => ability.name\n    ),\n    types: pokemon.types.map(({ type }: Record<string, any>) => type.name),\n    height: pokemon.height,\n    weight: pokemon.weight,\n    base_experience: pokemon.base_experience,\n    stats: pokemon.stats.map((stat: Record<string, any>) => ({\n      name: stat.stat.name,\n      base_stat: stat.base_stat,\n      effort: stat.effort\n    }))\n  }\n}\n\nexport default parseFetchedPokemon\n","import { createContext } from 'react'\n\nexport type PokeHomeInfo = {\n  id: number\n  name: string\n  abilities: string[]\n  types: string[]\n  height: number\n  weight: number\n  base_experience: number\n  stats: {\n    name: string\n    base_stat: number\n    effort: number\n  }[]\n}\n\ntype PokeContextState = {\n  pokemons: PokeHomeInfo[]\n  nextPage: () => void\n  isLoading: boolean\n  error: any\n}\n\nconst initialState: PokeContextState = {\n  pokemons: [],\n  nextPage: () => {},\n  isLoading: true,\n  error: null\n}\n\nconst pokeContext = createContext<PokeContextState>(initialState)\n\nexport default pokeContext\n","import React, { useEffect, useState } from 'react'\n\nimport getResponseArray from '../helpers/getResponseArray'\nimport parseFetchedPokemon from '../helpers/parseFetchedPokemon'\nimport pokeContext from './pokeContext'\nimport { PokeHomeInfo } from './pokeContext'\n\nconst PokeProvider: React.FC = ({ children }) => {\n  const [isLoading, setIsLoading] = useState(true)\n  const [page, setPage] = useState(1)\n  const [pokemons, setPokemons] = useState<PokeHomeInfo[]>([])\n  const [error, setError] = useState<any>()\n\n  useEffect(() => {\n    const fetchPokemons = async () => {\n      const responses = await getResponseArray(page, 15)\n      const fetchedPokemons: PokeHomeInfo[] = []\n      for (const response of responses) {\n        const pokeRes = await response.json()\n        fetchedPokemons.push(parseFetchedPokemon(pokeRes))\n      }\n      return fetchedPokemons\n    }\n\n    fetchPokemons()\n      .then(fetchedPokemons => {\n        setPokemons(prev => [...prev, ...fetchedPokemons])\n        setIsLoading(false)\n      })\n      .catch(err => {\n        setError(err.message || 'Something went wrong')\n      })\n  }, [page])\n\n  const nextPage = () => setPage(prev => prev + 1)\n\n  return (\n    <pokeContext.Provider value={{ pokemons, isLoading, error, nextPage }}>\n      {children}\n    </pokeContext.Provider>\n  )\n}\n\nexport default PokeProvider\n","import { createGlobalStyle } from 'styled-components'\n\nexport default createGlobalStyle`\n  :root{\n    font-size: 62.5%;\n    --veryDarkGrayishBlue: #171A21;\n    --darkGrayishBlue: #292E3B;\n    --veryLightBlue: #E0E6EB;\n    --typeGroup1: #FDDFDF;\n    --typeGroup2: #DEFDE0;\n    --typeGroup3: #FCF7DE;\n    --typeGroup4: #DEF3FD;\n    --typeGroup5: #f4e7da;\n    --typeGroup6: #d5d5d4;\n    --typeGroup7: #fceaff;\n    --typeGroup8: #98d7a5;\n    --typeGroup9: #f8d5a3;\n    --typeGroup10: #97b3e6;\n    --typeGroup11: #eaeda1;\n    --typeGroup12: #F5F5F5;\n    --typeGroup13: #E6E0D4;\n    --typeGroup14: #F5F5F5;\n    --statHp: #72F47A;\n    --statAtk: #DEBCBC;\n    --statDef: #F8D5A3;\n    --statSpAtk: #EC9F9F;\n    --statSpDef: #E9DA8F;\n    --statSpd: #96C2DB;\n  }\n  * {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n    font-family: \"Roboto\", \"Helvetica Neue\", Helvetica, Arial, sans-serif;\n  }\n\n  *, input, button {\n    font-family: \"Roboto\", \"Helvetica Neue\", Helvetica, Arial, sans-serif;\n  }\n  \n  body {\n    min-height: 100vh;\n    background-color: var(--veryDarkGrayishBlue);\n  }\n\n  .wrapper {\n    margin-top: 5rem !important;\n    color: var(--veryLightBlue);\n  }\n\n  h1.info {\n    color: var(--veryLightBlue);\n    margin-top: 5rem;\n    font-weight: lighter;\n    font-size: 3rem;\n    text-align: center;\n  }\n\n  h2 {\n    text-align: center;\n    font-weight: normal;\n    font-size: 2.5rem;\n  }\n\n  h3 {\n    margin-bottom: 1rem;\n    font-weight: normal;\n    font-size: 2rem;\n  }\n\n  .spinner {\n    width: 3rem;\n    height: 3rem;\n    margin: 5rem auto 3rem;\n    border-radius: 50%;\n    border: 3px solid var(--veryLightBlue);\n    border-bottom-color: transparent;\n    animation: spinner linear 800ms infinite;\n  }\n\n  @keyframes spinner {\n    from {\n      transform: rotate(0deg);\n    }\n    to {\n      transform: rotate(360deg);\n    }\n  }\n\n  @media (min-width: 576px) {\n    .wrapper {\n      margin-top: 7rem !important;\n    }\n    h2 {\n      font-size: 3.5rem;\n    }\n    h3 {\n      font-size: 2.5rem;\n    }\n  }\n`\n","export default __webpack_public_path__ + \"static/media/pokedexIcon.16075dc5.svg\";","export default __webpack_public_path__ + \"static/media/searchIcon.244cbf07.svg\";","import styled from 'styled-components'\n\nconst Container = styled.div`\n  width: 90%;\n  max-width: 135rem;\n  margin: 0 auto;\n\n  @media (min-width: 1350px) {\n    width: 100%;\n  }\n`\nexport default Container\n","import styled from 'styled-components'\n\nconst Header = styled.header`\n  background-color: var(--darkGrayishBlue);\n  padding: 1.5rem;\n  > div {\n    display: flex;\n    flex-direction: column;\n  }\n\n  .logo {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    gap: 2rem;\n    color: white;\n    font-size: 2.5rem;\n    font-weight: 400;\n    img {\n      height: 6rem;\n    }\n  }\n\n  form {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    gap: 1rem;\n    border-bottom: 1px solid white;\n    margin-top: 2rem;\n    padding: 0 0.5rem;\n    input {\n      background-color: transparent;\n      padding: 0.5rem 0;\n      outline: none;\n      border: none;\n      width: 100%;\n      &,\n      &::placeholder {\n        font-size: 1.7rem;\n        color: white;\n      }\n    }\n    button {\n      background-color: transparent;\n      border: none;\n      cursor: pointer;\n      img {\n        width: 2.3rem;\n        margin-bottom: 0.7rem;\n      }\n    }\n  }\n\n  @media (min-width: 500px) {\n    > div {\n      flex-direction: row;\n      align-items: flex-start;\n      justify-content: space-between;\n    }\n\n    .input-group {\n      width: 20rem;\n    }\n  }\n\n  @media (min-width: 600px) {\n    .input-group {\n      width: 35rem;\n    }\n  }\n`\nexport default Header\n","import styled from 'styled-components'\n\nconst PokeTypeBadge = styled.span`\n  width: 7rem;\n  padding: 0.5rem 0;\n  border-radius: 1rem;\n  font-size: 1.5rem;\n  text-align: center;\n  color: var(--veryDarkGrayishBlue);\n  &.fire {\n    background-color: var(--typeGroup1);\n  }\n  &.grass {\n    background-color: var(--typeGroup2);\n  }\n  &.electric {\n    background-color: var(--typeGroup3);\n  }\n  &.water {\n    background-color: var(--typeGroup4);\n  }\n  &.ground,\n  &.rock,\n  &.dark,\n  &.shadow {\n    background-color: var(--typeGroup5);\n  }\n  &.rock {\n    background-color: var(--typeGroup6);\n  }\n  &.fairy {\n    background-color: var(--typeGroup7);\n  }\n  &.poison {\n    background-color: var(--typeGroup8);\n  }\n  &.bug {\n    background-color: var(--typeGroup9);\n  }\n  &.dragon {\n    background-color: var(--typeGroup10);\n  }\n  &.psychic,\n  &.ghost,\n  &.steel {\n    background-color: var(--typeGroup11);\n  }\n  &.flying {\n    background-color: var(--typeGroup12);\n  }\n  &.fighting {\n    background-color: var(--typeGroup13);\n  }\n  &.normal,\n  &.ice,\n  &.unknown {\n    background-color: var(--typeGroup14);\n  }\n`\nexport default PokeTypeBadge\n","import styled from 'styled-components'\n\nconst Card = styled.article`\n  background-color: var(--darkGrayishBlue);\n  border-radius: 1rem;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  max-width: 40rem;\n  transition: transform 200ms;\n`\n\nexport default Card\n","import styled from 'styled-components'\n\nimport Container from '../Container'\nimport Card from '../Card'\n\nconst Wrapper = styled(Container)`\n  margin: 2.5rem auto;\n  display: grid;\n  justify-content: center;\n  gap: 3rem;\n\n  a {\n    text-decoration: none;\n  }\n\n  @media (min-width: 768px) {\n    grid-template-columns: repeat(2, 1fr);\n  }\n  @media (min-width: 992px) {\n    margin: 3rem auto;\n    grid-template-columns: repeat(3, 1fr);\n  }\n  @media (min-width: 1200px) {\n    grid-template-columns: repeat(4, 1fr);\n    gap: 4rem;\n  }\n`\n\nconst PokeCard = styled(Card)`\n  img {\n    width: 80%;\n  }\n  > span {\n    color: var(--veryLightBlue);\n    font-size: 2.5rem;\n  }\n  .badges {\n    margin: 1.5rem 0 2.5rem;\n    display: flex;\n    align-items: center;\n    gap: 1rem;\n  }\n\n  &:hover {\n    transform: scale(1.04);\n  }\n`\n\nexport { Wrapper, PokeCard }\n","import React, { useContext, useEffect, useRef } from 'react'\nimport { Link } from 'react-router-dom'\n\nimport pokeContext from '../../store/pokeContext'\nimport PokeTypeBadge from '../PokeTypeBadge'\nimport { Wrapper, PokeCard } from './styles'\n\nconst AllPokemons: React.FC = () => {\n  const { pokemons, nextPage, isLoading, error } = useContext(pokeContext)\n  const nextPageRef = useRef(nextPage)\n  const qtdPokemons = pokemons.length\n\n  useEffect(() => {\n    if (qtdPokemons > 0 && qtdPokemons < 1118) {\n      const intersectionObserver = new IntersectionObserver(entries => {\n        if (entries.some(entry => entry.isIntersecting)) {\n          nextPageRef.current()\n        }\n      })\n      intersectionObserver.observe(\n        document.querySelector('#sentinel') as Element\n      )\n      return () => intersectionObserver.disconnect()\n    }\n  }, [qtdPokemons])\n\n  return (\n    <>\n      <Wrapper>\n        {pokemons.map(pokemon => (\n          <Link to={`/frontend-challenge/${pokemon.id}`} key={pokemon.id}>\n            <PokeCard>\n              <img\n                src={`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/official-artwork/${pokemon.id}.png`}\n                alt={pokemon.name}\n              />\n              <span>\n                {pokemon.name\n                  .replace(/-/g, ' ')\n                  .replace(/(^\\w|\\s\\w)/g, str => str.toUpperCase())}\n              </span>\n              <div className=\"badges\">\n                {pokemon.types.map(type => (\n                  <PokeTypeBadge className={type} key={type}>\n                    {type[0].toUpperCase() + type.substr(1, type.length - 1)}\n                  </PokeTypeBadge>\n                ))}\n              </div>\n            </PokeCard>\n          </Link>\n        ))}\n      </Wrapper>\n      {(qtdPokemons || isLoading) && qtdPokemons < 1118 && (\n        <div id=\"sentinel\" className=\"spinner\"></div>\n      )}\n      {error && !isLoading && (\n        <h1 className=\"info\">{error?.message || 'Something went wrong!'}</h1>\n      )}\n    </>\n  )\n}\n\nexport default AllPokemons\n","import React, { useRef, MutableRefObject } from 'react'\nimport { useHistory } from 'react-router'\n\nimport pokedexIcon from '../../assets/images/pokedexIcon.svg'\nimport searchIcon from '../../assets/images/searchIcon.svg'\nimport Container from '../../components/Container'\nimport Header from '../../components/Header'\nimport AllPokemons from '../../components/AllPokemons'\n\nconst Home: React.FC = () => {\n  const inputRef = useRef() as MutableRefObject<HTMLInputElement>\n  const history = useHistory()\n\n  return (\n    <>\n      <Header>\n        <Container>\n          <h1 className=\"logo\">\n            <img src={pokedexIcon} alt=\"Pokedex Icon\" />\n            Pokédex\n          </h1>\n          <form\n            onSubmit={evt => {\n              evt.preventDefault()\n              history.push('/frontend-challenge' + inputRef.current.value)\n            }}\n          >\n            <input\n              type=\"text\"\n              placeholder=\"Search\"\n              aria-label=\"Search for a pokemon\"\n              ref={inputRef}\n            />\n            <button type=\"submit\">\n              <img src={searchIcon} alt=\"Search Icon\" />\n            </button>\n          </form>\n        </Container>\n      </Header>\n      <AllPokemons />\n    </>\n  )\n}\n\nexport default Home\n","export default __webpack_public_path__ + \"static/media/arrowIcon.cdfb99c1.svg\";","import styled from 'styled-components'\n\nconst InfoWrapper = styled.article`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 0.5rem 1rem;\n  justify-content: center;\n  span {\n    color: var(--veryLightBlue);\n    font-size: 1.3rem;\n  }\n  @media (min-width: 600px) {\n    span {\n      font-size: 1.5rem;\n    }\n  }\n  @media (min-width: 840px) {\n    grid-area: pokeinfo;\n    gap: 1rem 3rem;\n    span {\n      font-size: 1.7rem;\n    }\n  }\n`\n\nexport { InfoWrapper }\n","import React from 'react'\nimport { InfoWrapper } from './styles'\n\ntype InfoProps = {\n  color: string\n  height: number\n  weight: number\n  capture_rate: number\n  base_experience: number\n  base_happiness: number\n}\n\nconst Info: React.FC<InfoProps> = props => {\n  return (\n    <InfoWrapper>\n      <span>\n        <strong>Color: </strong>\n        {props.color[0].toUpperCase() +\n          props.color.substr(1, props.color.length)}\n      </span>\n      <span>\n        <strong>Height: </strong>\n        {props.height}\n      </span>\n      <span>\n        <strong>Weight: </strong>\n        {props.weight}\n      </span>\n      <span>\n        <strong>Capture Rate: </strong>\n        {props.capture_rate}\n      </span>\n      <span>\n        <strong>Base Experience: </strong>\n        {props.base_experience}\n      </span>\n      <span>\n        <strong>Base Happiness: </strong>\n        {props.base_happiness}\n      </span>\n    </InfoWrapper>\n  )\n}\n\nexport default Info\n","import styled from 'styled-components'\n\nconst StatsWrapper = styled.section`\n  width: 90%;\n  div + div {\n    margin-top: 0.5rem;\n  }\n  div span {\n    display: block;\n    color: var(--veryLightBlue);\n    font-size: 1.1rem;\n    margin-bottom: 0.3rem;\n  }\n\n  @media (min-width: 600px) {\n    div span {\n      margin-bottom: 0.4rem;\n      font-size: 1.3rem;\n    }\n  }\n\n  @media (min-width: 840px) {\n    align-self: center;\n    grid-area: pokestats;\n    div + div {\n      margin-top: 1.5rem;\n    }\n    div span {\n      font-size: 1.5rem;\n      margin-bottom: 0.5rem;\n    }\n  }\n`\n\nconst StatBar = styled.div<{ width: string }>`\n  width: 100%;\n  height: 1.8rem;\n  background-color: var(--darkGrayishBlue);\n  border-radius: 2rem;\n  &#hp {\n    .inner {\n      background-color: var(--statHp);\n    }\n  }\n  &#atk {\n    .inner {\n      background-color: var(--statAtk);\n    }\n  }\n  &#def {\n    .inner {\n      background-color: var(--statDef);\n    }\n  }\n  &#special_atk {\n    .inner {\n      background-color: var(--statSpAtk);\n    }\n  }\n  &#special_def {\n    .inner {\n      background-color: var(--statSpDef);\n    }\n  }\n  &#speed {\n    .inner {\n      background-color: var(--statSpd);\n    }\n  }\n  .inner {\n    height: 100%;\n    border-radius: 2rem\n      ${props => (props.width === '100%' ? '2rem 2rem' : '0 0')} 2rem;\n    max-width: ${props => props.width};\n    animation: 1.5s ease-in-out slide;\n  }\n\n  @keyframes slide {\n    from {\n      width: 0;\n    }\n    to {\n      width: 100%;\n    }\n  }\n\n  @media (min-width: 840px) {\n    height: 2.5rem;\n  }\n`\n\nexport { StatsWrapper, StatBar }\n","import React from 'react'\n\nimport { StatsWrapper, StatBar } from './styles'\n\ntype StatsProps = {\n  stats: {\n    name: string\n    base_stat: number\n    effort: number\n  }[]\n}\n\nconst Stats: React.FC<StatsProps> = ({ stats }) => {\n  stats = stats.map(stat => {\n    stat.name = stat.name\n      .replace('attack', 'atk')\n      .replace('defense', 'def')\n      .replace('special-atk', 'special_atk')\n      .replace('special-def', 'special_def')\n    return { ...stat }\n  })\n\n  return (\n    <StatsWrapper>\n      {stats.map(stat => (\n        <div key={stat.name}>\n          <span>\n            {stat.name\n              .replace(/(hp|atk|def|s)/g, str => str.toUpperCase())\n              .replace('_', ' ')}\n            : {stat.base_stat} / Effort: {stat.effort}\n          </span>\n          <StatBar\n            id={stat.name}\n            className=\"stat-bar\"\n            width={`${stat.base_stat > 100 ? 100 : stat.base_stat}%`}\n          >\n            <div className=\"inner\"></div>\n          </StatBar>\n        </div>\n      ))}\n    </StatsWrapper>\n  )\n}\n\nexport default Stats\n","import styled from 'styled-components'\n\nimport Container from '../../Container'\n\nconst AbilitiesWrapper = styled(Container)`\n  article {\n    max-width: 80rem;\n    margin: 3rem auto;\n    p {\n      text-align: center;\n      font-size: 1.5rem;\n    }\n  }\n\n  @media (min-width: 576px) {\n    article {\n      p {\n        font-size: 2rem;\n      }\n    }\n  }\n`\n\nexport { AbilitiesWrapper }\n","import React, { useEffect, useState } from 'react'\n\nimport { AbilitiesWrapper } from './styles'\n\ntype Ability = {\n  name: string\n  info: string\n}\n\ntype AbilitiesProps = {\n  abilities: string[]\n}\n\nconst Abilities: React.FC<AbilitiesProps> = ({ abilities: abilitiesNames }) => {\n  const [isLoading, setIsLoading] = useState(true)\n  const [abilities, setAbilities] = useState<Ability[]>([])\n  const [error, setError] = useState<any>()\n\n  useEffect(() => {\n    setIsLoading(true)\n\n    const getAbilities = async () => {\n      const fetchedAbilities: Ability[] = []\n\n      const responseArray = await Promise.all(\n        abilitiesNames.map(ability =>\n          fetch(`https://pokeapi.co/api/v2/ability/${ability}/`)\n        )\n      )\n\n      for (const response of responseArray) {\n        const { effect_entries, name } = await response.json()\n        const { effect } = effect_entries.find(\n          (effectObj: Record<string, any>) => effectObj.language.name === 'en'\n        )\n        fetchedAbilities.push({\n          name,\n          info: effect\n        })\n      }\n\n      return fetchedAbilities\n    }\n\n    getAbilities()\n      .then(fetchedAbilities => {\n        setAbilities(fetchedAbilities)\n        setIsLoading(false)\n        setError(null)\n      })\n      .then(err => {\n        setError(err)\n        setIsLoading(false)\n      })\n  }, [abilitiesNames])\n\n  return (\n    <>\n      <AbilitiesWrapper as=\"section\" className=\"wrapper\">\n        <h2>Abilities</h2>\n        {abilities.map(ability => (\n          <article key={ability.name}>\n            <h3>\n              {ability.name[0].toUpperCase() +\n                ability.name.substr(1, ability.name.length)}\n            </h3>\n            <p>{ability.info}</p>\n          </article>\n        ))}\n      </AbilitiesWrapper>\n      {error && (\n        <h1 className=\"info\">{error?.message || 'Something went wrong'}</h1>\n      )}\n      {isLoading && <div className=\"spinner\"></div>}\n    </>\n  )\n}\n\nexport default Abilities\n","import styled from 'styled-components'\n\nimport Container from '../../Container'\n\nconst EvolutionWrapper = styled(Container)`\n  a {\n    text-decoration: none;\n    color: var(--lightGrayishBlue);\n  }\n  .cards {\n    margin: 3rem 0;\n    display: flex;\n    justify-content: space-evenly;\n    flex-wrap: wrap;\n    gap: 2.5rem;\n    article {\n      max-width: 30rem;\n      img {\n        width: 80%;\n      }\n      p {\n        font-size: 1.5rem;\n        margin-bottom: 3rem;\n      }\n      &:hover {\n        transform: scale(1.03);\n      }\n    }\n  }\n\n  @media (min-width: 576px) {\n    .cards {\n      gap: 3rem;\n      width: 80%;\n      margin: 5rem auto;\n      article p {\n        font-size: 1.8rem;\n      }\n    }\n  }\n`\n\nexport { EvolutionWrapper }\n","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\n\nimport Card from '../../Card'\nimport { EvolutionWrapper } from './styles'\n\ntype PokemonEvolution = {\n  name: string\n  initial: boolean\n  min_level?: number\n  min_happiness?: number\n  id: string\n}\n\ntype EvolutionProps = {\n  url: string\n}\n\nconst parseEvolutions = (\n  evolves_to: Record<string, any>[],\n  parsedEvolutions: PokemonEvolution[] = []\n): PokemonEvolution[] => {\n  for (const evolves of evolves_to) {\n    if (evolves.evolves_to.length > 0) {\n      return parsedEvolutions.concat(\n        parseEvolutions(\n          evolves.evolves_to,\n          parsedEvolutions.concat({\n            name: evolves.species.name,\n            initial: false,\n            id: evolves.species.url.split('/')[\n              evolves.species.url.split('/').length - 2\n            ],\n            min_level: evolves.evolution_details[0].min_level,\n            min_happiness: evolves.evolution_details[0].min_happiness\n          })\n        )\n      )\n    }\n    parsedEvolutions.push({\n      name: evolves.species.name,\n      id: evolves.species.url.split('/')[\n        evolves.species.url.split('/').length - 2\n      ],\n      initial: false,\n      min_level: evolves.evolution_details[0].min_level,\n      min_happiness: evolves.evolution_details[0].min_happiness\n    })\n  }\n  return parsedEvolutions\n}\n\nconst Evolution: React.FC<EvolutionProps> = ({ url }) => {\n  const [isLoading, setIsLoading] = useState(true)\n  const [error, setError] = useState<any>()\n  const [evolutions, setEvolutions] = useState<PokemonEvolution[]>([])\n\n  useEffect(() => {\n    const getEvolutions = async (): Promise<PokemonEvolution[]> => {\n      const response = await fetch(url)\n      const { chain } = await response.json()\n      const initial = {\n        name: chain.species.name,\n        initial: true,\n        id: chain.species.url.split('/')[\n          chain.species.url.split('/').length - 2\n        ]\n      }\n      return [initial, ...parseEvolutions(chain.evolves_to)]\n    }\n\n    getEvolutions()\n      .then(fetchedEvolutions => {\n        setEvolutions(fetchedEvolutions)\n        setIsLoading(false)\n        setError(null)\n      })\n      .then(err => {\n        setError(err)\n        setIsLoading(false)\n      })\n  }, [url])\n\n  return (\n    <>\n      <EvolutionWrapper as=\"section\" className=\"wrapper\">\n        <h2>Evolution</h2>\n        <div className=\"cards\">\n          {evolutions.map(evolution => (\n            <Link\n              to={`/frontend-challenge/${evolution.id}`}\n              key={evolution.name}\n              onClick={() => {\n                window.scrollTo(0, 0)\n              }}\n            >\n              <Card>\n                <img\n                  src={`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/official-artwork/${evolution.id}.png`}\n                  alt={evolution.name}\n                />\n                <h3>\n                  {evolution.name[0].toUpperCase() +\n                    evolution.name.substr(1, evolution.name.length)}\n                </h3>\n                {evolution.initial && <p>Initial</p>}\n                {evolution.min_level && <p>Min Level: {evolution.min_level}</p>}\n                {evolution.min_happiness && (\n                  <p>Min Happiness: {evolution.min_happiness}</p>\n                )}\n                {!evolution.min_happiness &&\n                  !evolution.min_level &&\n                  !evolution.initial && <p>Other requirements</p>}\n              </Card>\n            </Link>\n          ))}\n        </div>\n      </EvolutionWrapper>\n      {error && (\n        <h1 className=\"info\">{error?.message || 'Something went wrong'}</h1>\n      )}\n      {isLoading && <div className=\"spinner\"></div>}\n    </>\n  )\n}\n\nexport default Evolution\n","import styled from 'styled-components'\n\nimport Container from '../../Container'\n\nconst TypeWrapper = styled(Container)`\n  h2 {\n    margin-bottom: 3rem;\n  }\n  article {\n    max-width: 80rem;\n    margin: 0 auto;\n    > div {\n      padding: 1rem;\n    }\n    p {\n      font-size: 1.5rem;\n    }\n    .badges {\n      margin: 0.5rem 0 1.5rem;\n      display: flex;\n      flex-wrap: wrap;\n      gap: 1rem;\n    }\n  }\n\n  @media (min-width: 576px) {\n    article {\n      p {\n        font-size: 2rem;\n      }\n      .badges {\n        margin: 0.8rem 0 1.8rem;\n      }\n    }\n  }\n`\n\nexport { TypeWrapper }\n","import React, { useState, useEffect } from 'react'\n\nimport PokeTypeBadge from '../../PokeTypeBadge'\nimport { TypeWrapper } from './styles'\n\ntype PokemonType = {\n  name: string\n  double_damage_from: string[]\n  double_damage_to: string[]\n  half_damage_from: string[]\n  half_damage_to: string[]\n  no_damage_from: string[]\n  no_damage_to: string[]\n}\n\ntype TypeProps = {\n  types: string[]\n}\n\nconst Type: React.FC<TypeProps> = ({ types: typesNames }) => {\n  const [isLoading, setIsLoading] = useState(true)\n  const [types, setTypes] = useState<PokemonType[]>([])\n  const [error, setError] = useState<any>()\n\n  useEffect(() => {\n    setIsLoading(true)\n    const getTypes = async () => {\n      const fetchedTypes: PokemonType[] = []\n      const responseArray = await Promise.all(\n        typesNames.map(type => fetch(`https://pokeapi.co/api/v2/type/${type}/`))\n      )\n\n      for (const response of responseArray) {\n        const { damage_relations, name } = await response.json()\n        const parsedDamageRelations = Object.entries(damage_relations)\n          .map(([key, value]: any[]) => ({\n            [key]: value.map((type: Record<string, any>) => type.name)\n          }))\n          .reduce((acc, val) => ({ ...acc, ...val }))\n\n        const fetchedType = {\n          ...parsedDamageRelations,\n          name\n        } as PokemonType\n        fetchedTypes.push(fetchedType)\n      }\n\n      return fetchedTypes\n    }\n\n    getTypes()\n      .then(fetchedTypes => {\n        setTypes(fetchedTypes)\n        setIsLoading(false)\n        setError(null)\n      })\n      .then(err => {\n        setError(err)\n        setIsLoading(false)\n      })\n  }, [typesNames])\n\n  return (\n    <>\n      <TypeWrapper as=\"section\" className=\"wrapper\">\n        <h2>Types</h2>\n        {types.map(type => (\n          <article key={type.name}>\n            <h3>\n              {type.name[0].toUpperCase() +\n                type.name.substr(1, type.name.length)}\n              :{' '}\n            </h3>\n            <div>\n              <p>Double damage from: </p>\n              <div className=\"badges\">\n                {type.double_damage_from.map(item => (\n                  <PokeTypeBadge className={item.toLowerCase()} key={item}>\n                    {item}\n                  </PokeTypeBadge>\n                ))}\n              </div>\n              <p>Double damage to: </p>\n              <div className=\"badges\">\n                {type.double_damage_to.map(item => (\n                  <PokeTypeBadge className={item.toLowerCase()} key={item}>\n                    {item}\n                  </PokeTypeBadge>\n                ))}\n              </div>\n              <p>Half damage from: </p>\n              <div className=\"badges\">\n                {type.half_damage_from.map(item => (\n                  <PokeTypeBadge className={item.toLowerCase()} key={item}>\n                    {item}\n                  </PokeTypeBadge>\n                ))}\n              </div>\n              <p>Half damage to: </p>\n              <div className=\"badges\">\n                {type.half_damage_to.map(item => (\n                  <PokeTypeBadge className={item.toLowerCase()} key={item}>\n                    {item}\n                  </PokeTypeBadge>\n                ))}\n              </div>\n              <p>No damage from: </p>\n              <div className=\"badges\">\n                {type.no_damage_from.map((item: string) => (\n                  <PokeTypeBadge className={item.toLowerCase()} key={item}>\n                    {item}\n                  </PokeTypeBadge>\n                ))}\n              </div>\n              <p>No damage to: </p>\n              <div className=\"badges\">\n                {type.no_damage_to.map(item => (\n                  <PokeTypeBadge className={item.toLowerCase()} key={item}>\n                    {item}\n                  </PokeTypeBadge>\n                ))}\n              </div>\n            </div>\n          </article>\n        ))}\n      </TypeWrapper>\n      {error && (\n        <h1 className=\"info\">{error?.message || 'Something went wrong'}</h1>\n      )}\n      {isLoading && <div className=\"spinner\"></div>}\n    </>\n  )\n}\n\nexport default Type\n","import styled from 'styled-components'\n\nimport Container from '../../components/Container'\n\nconst MainDetails = styled(Container)`\n  padding: 2rem 0 0;\n  a img {\n    width: 5rem;\n    transition: transform 0.2s ease-in;\n    &:hover {\n      transform: translateX(-1rem);\n    }\n  }\n\n  > section {\n    display: grid;\n    margin-top: 3rem;\n    gap: 2.5rem;\n    padding-bottom: 3rem;\n    border-bottom: 1px solid var(--veryLightBlue);\n    justify-items: center;\n    h1 {\n      color: var(--veryLightBlue);\n      font-weight: 400;\n      text-align: center;\n      font-size: 3rem;\n    }\n    img {\n      width: 100%;\n      max-width: 50rem;\n    }\n  }\n\n  @media (min-width: 840px) {\n    > section {\n      padding-bottom: 5rem;\n      gap: 0rem 2rem;\n      grid-template: 50px 50px auto auto / 1fr 1fr;\n      grid-template-areas: 'pokeimg vazio' 'pokeimg pokename' 'pokeimg pokestats' 'pokeinfo pokestats';\n      h1 {\n        grid-area: pokename;\n        font-size: 3.5rem;\n      }\n      img {\n        grid-area: pokeimg;\n      }\n    }\n  }\n`\n\nexport { MainDetails }\n","import React, { useContext, useEffect, useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { useParams } from 'react-router'\n\nimport pokeContext, { PokeHomeInfo } from '../../store/pokeContext'\nimport parseFetchedPokemon from '../../helpers/parseFetchedPokemon'\nimport arrowIcon from '../../assets/images/arrowIcon.svg'\nimport Info from '../../components/PokeDetails/Info'\nimport Stats from '../../components/PokeDetails/Stats'\nimport Abilities from '../../components/PokeDetails/Abilities'\nimport Evolution from '../../components/PokeDetails/Evolution'\nimport Type from '../../components/PokeDetails/Type'\nimport { MainDetails } from './styles'\n\ntype PokemonSpecieResponse = {\n  color: string\n  base_happiness: number\n  capture_rate: number\n  evolution_chain: string\n}\ntype PokemonDetails = PokeHomeInfo & PokemonSpecieResponse\n\nconst Details: React.FC = () => {\n  const { pokemons } = useContext(pokeContext)\n  const { poke_id } = useParams<{ poke_id: string }>()\n  const [isLoading, setIsLoading] = useState(true)\n  const [error, setError] = useState<any>()\n  const [pokemon, setPokemon] = useState<PokemonDetails>()\n\n  useEffect(() => {\n    setIsLoading(true)\n\n    const pokemonInCtx = pokemons.find(\n      pkm => pkm.id.toString() === poke_id || pkm.name === poke_id\n    )\n\n    const getSpecieDetails = async (): Promise<PokemonSpecieResponse> => {\n      const response = await fetch(\n        `https://pokeapi.co/api/v2/pokemon-species/${poke_id}`\n      )\n\n      const specieDetails = await response.json()\n\n      return {\n        color: specieDetails.color.name,\n        base_happiness: specieDetails.base_happiness,\n        capture_rate: specieDetails.capture_rate,\n        evolution_chain: specieDetails.evolution_chain.url\n      }\n    }\n\n    if (pokemonInCtx) {\n      getSpecieDetails()\n        .then(specieDetails => {\n          setPokemon({\n            ...pokemonInCtx,\n            ...specieDetails\n          })\n          setIsLoading(false)\n          setError(null)\n        })\n        .catch(err => {\n          setError(err)\n          setIsLoading(false)\n        })\n      return\n    }\n\n    fetch(\n      `https://pokeapi.co/api/v2/pokemon/${poke_id\n        .toLowerCase()\n        .replace(/\\s/g, '-')}`\n    )\n      .then(res => {\n        if (!res.ok)\n          throw new Error(\n            res.status === 404\n              ? 'Pokemon not found, did you type the full pokemon name?'\n              : ''\n          )\n        return Promise.all([res.json(), getSpecieDetails()])\n      })\n      .then(([fetchedInfo, details]) => {\n        setPokemon({\n          ...parseFetchedPokemon(fetchedInfo),\n          ...details\n        })\n        setIsLoading(false)\n        setError(null)\n      })\n      .catch(err => {\n        setError(err)\n        setIsLoading(false)\n      })\n  }, [pokemons, poke_id])\n\n  return (\n    <>\n      {!isLoading && !error && pokemon && (\n        <>\n          <MainDetails as=\"main\">\n            <Link to=\"/frontend-challenge\">\n              <img src={arrowIcon} alt=\"arrowIcon\" />\n            </Link>\n            <section>\n              <h1>\n                #{pokemon.id}{' '}\n                {pokemon.name[0].toUpperCase() +\n                  pokemon.name.substr(1, pokemon.name.length)}\n              </h1>\n              <img\n                src={`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/official-artwork/${pokemon.id}.png`}\n                alt=\"Bulbasaur art\"\n              />\n              <Info\n                color={pokemon.color}\n                base_experience={pokemon.base_experience}\n                base_happiness={pokemon.base_happiness}\n                capture_rate={pokemon.capture_rate}\n                height={pokemon.height}\n                weight={pokemon.weight}\n              />\n              <Stats stats={pokemon.stats} />\n            </section>\n          </MainDetails>\n          <Abilities abilities={pokemon.abilities} />\n          <Type types={pokemon.types} />\n          <Evolution url={pokemon.evolution_chain} />\n        </>\n      )}\n      {error && (\n        <>\n          <Link to=\"/frontend-challenge\">\n            <img\n              src={arrowIcon}\n              alt=\"arrowIcon\"\n              style={{ width: '5rem', margin: '3rem' }}\n            />\n          </Link>\n          <h1 className=\"info\">{error?.message || 'Something went wrong'}</h1>\n        </>\n      )}\n      {isLoading && <div className=\"spinner\"></div>}\n    </>\n  )\n}\n\nexport default Details\n","import React from 'react'\nimport { Route } from 'react-router'\n\nimport PokeProvider from './store/PokeProvider'\nimport GlobalStyles from './styles/GlobalStyles'\nimport Home from './pages/Home'\nimport Details from './pages/Details'\n\nfunction App() {\n  return (\n    <PokeProvider>\n      <Route path=\"/frontend-challenge\" exact component={Home} />\n      <Route path=\"/frontend-challenge/:poke_id\" component={Details} />\n      <GlobalStyles />\n    </PokeProvider>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter } from 'react-router-dom'\n\nimport App from './App'\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}